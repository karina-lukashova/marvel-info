{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","pages/ComicsPage.js","pages/404.js","components/singleComic/SingleComic.js","pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getOneCharacter","id","getAllComics","_transformComics","getOneComics","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","length","slice","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","width","height","version","viewBox","style","margin","background","display","stopColor","fill","fillRule","d","attributeName","dur","from","repeatCount","to","type","ErrorMessage","objectFit","src","errorImg","alt","View","includes","className","href","RandomChar","setChar","useEffect","updateChar","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemsLoading","setItemsLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","visibleList","index","ref","el","onCharSelected","onKeyPress","evt","key","tabIndex","renderItems","disabled","Skeleton","color","i","comicId","resourceURI","replace","CharInfo","charId","onCharLoaded","skeleton","ErrorBoundary","state","this","children","err","Component","MainPage","selectedChar","setSelectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newComicsLoading","setComicsLoading","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","ComicsPage","Page404","SingleComic","useParams","comic","setComic","updateComic","onComicLoaded","SingleComicPage","AppHeader","isActive","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7dad3f00.chunk.js","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, error, request, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=382124e5ebc2fff76b70b64ce0e6f545';\r\n\r\n  const getAllCharacters = async (offset) => {\r\n    const result = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return result.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getOneCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset) => {\r\n    const result = await request(`${_apiBase}comics?orderBy=issueNumber&offset=${offset}&limit=8&${_apiKey}`);\r\n    return result.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getOneComics = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(result.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? char.description : 'Description not found',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items.length > 0 ? char.comics.items.slice(0, 10) : 'There are no comics with this character'\r\n    }\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE'\r\n    }\r\n  }\r\n  \r\n  return { loading, error, getAllCharacters, getOneCharacter, getAllComics, getOneComics, clearError };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      return data;\r\n    } catch(err) {\r\n      setLoading(false);\r\n      setError(err.message);\r\n      throw err;\r\n    }\r\n\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, error, request, clearError};\r\n};","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"200\"\r\n      height=\"200\"\r\n      version=\"1\"\r\n      viewBox=\"0 0 150 150\"\r\n      style={{margin: '0 auto', background: 'none', display: 'block'}}\r\n    >\r\n      <g>\r\n        <linearGradient id=\"a\">\r\n          <stop offset=\"0%\"></stop>\r\n          <stop offset=\"100%\" stopColor=\"#0090fe\"></stop>\r\n        </linearGradient>\r\n        <linearGradient id=\"b\">\r\n          <stop offset=\"0%\"></stop>\r\n          <stop offset=\"100%\" stopColor=\"#90e6fe\"></stop>\r\n        </linearGradient>\r\n        <path\r\n          fill=\"url(#a)\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M64 .98A63.02 63.02 0 11.98 64 63.02 63.02 0 0164 .98zm0 15.76A47.26 47.26 0 1116.74 64 47.26 47.26 0 0164 16.74z\"\r\n        ></path>\r\n        <path\r\n          fill=\"url(#b)\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M64.12 125.54A61.54 61.54 0 11125.66 64a61.54 61.54 0 01-61.54 61.54zm0-121.1A59.57 59.57 0 10123.7 64 59.57 59.57 0 0064.1 4.43zM64 115.56a51.7 51.7 0 1151.7-51.7 51.7 51.7 0 01-51.7 51.7zM64 14.4a49.48 49.48 0 1049.48 49.48A49.48 49.48 0 0064 14.4z\"\r\n        ></path>\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"1800ms\"\r\n          from=\"0 64 64\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"360 64 64\"\r\n          type=\"rotate\"\r\n        ></animateTransform>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={errorImg} alt=\"Возникла ошибка\" />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n\n    const { loading, error, getOneCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [])\n\n    const onCharLoaded = (newChar) => {\n        setChar(newChar);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getOneCharacter(id)\n            .then(data => onCharLoaded(data))\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char = {char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    const objectFit = (thumbnail && thumbnail.includes('not_available')) ? \"contain\" : \"cover\";\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{objectFit: objectFit}} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]);\n    const [newItemsLoading, setItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(Math.floor(Math.random() * (600 - 10) + 10));\n    const [charEnded, setCharEnded] = useState(false);\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setItemsLoading(false) : setItemsLoading(true);\n        getAllCharacters(offset)\n            .then(data => onCharListLoaded(data))\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setItemsLoading(newItemsLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    const renderItems = (arr) => {\n        const visibleList = arr.map((char, index) => {\n            return (\n                <li\n                    ref={el => itemRefs.current[index] = el}\n                    className=\"char__item\"\n                    key={char.id}\n                    onClick={() => {\n                        props.onCharSelected(char.id);\n                        focusOnItem(index);\n                    }}\n                    onKeyPress={(evt) => {\n                        if (evt.key === ' ' || evt.key === \"Enter\") {\n                            props.onCharSelected(char.id);\n                            focusOnItem(index);\n                        }\n                    }}\n                    tabIndex='0'>\n                    <img src={char.thumbnail} alt={char.name}/>\n                    <div className=\"char__name\">{char.name}</div>\n                </li>\n            );\n        });\n\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {visibleList}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemsLoading}\n                style={{display: charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getOneCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    // componentDidUpdate срабатывает, когда у нас меняется props, когда меняется state или когда мы принудительно заставляем компонент перерендерится с помощью спец. функции\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        const {charId} = props; \n\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getOneCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char = {char} /> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    const objectFit = thumbnail.includes('not_available') ? \"contain\" : \"cover\";\n\n    const getComicsListElement = () => {\n        if (typeof(comics) === 'string') {\n            return (\n                <li key={0} className=\"char__comics-item\" style={{color: 'red'}} >\n                    {comics}\n                </li>\n            )\n        } else {\n            const comicsList = comics.map((item, i) => {\n                const comicId = item.resourceURI.replace('http://gateway.marvel.com/v1/public/comics/', '');\n                return (\n                    <li key={i} className=\"char__comics-item\" >\n                        <Link to={\"/comics/\" + comicId}>{item.name}</Link>\n                    </li>\n                )\n            })\n            return comicsList;            \n        }\n    };\n    \n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: objectFit}} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {getComicsListElement()}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n  \r\n  static getDerivedStateFromError(err) {\r\n    return { error: true };\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../resources/img/vision.png';\r\n\r\nexport const MainPage = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(id);\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar/>\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected}/>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar}/>\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    </>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(Math.floor(Math.random() * (5000 - 10) + 10));\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setComicsLoading(false) : setComicsLoading(true);\n        getAllComics(offset)\n            .then(data => onComicsListLoaded(data))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setComicsLoading(newComicsLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    const renderItems = (arr) => {\n        const visibleList = arr.map((comics, index) => {\n            return (\n                <li className=\"comics__item\" key={comics.id}>\n                    <Link to={`/comics/${comics.id}`}>\n                        <img src={comics.thumbnail} alt={comics.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{comics.title}</div>\n                        <div className=\"comics__item-price\">{comics.price}</div>\n                    </Link>\n                </li>\n            );\n        });\n\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                {visibleList}\n            </ul>\n        )\n    };\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newComicsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newComicsLoading}\n                style={{display: comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n}\n\nexport default ComicsList;","import AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\n\r\nexport const ComicsPage = () => (\r\n  <>\r\n    <AppBanner />\r\n    <ComicsList />\r\n  </>\r\n);","import ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Page404 = () => (\r\n  <div>\r\n    <ErrorMessage />\r\n    <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n    <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/\">Back to main page</Link>\r\n  </div>\r\n);","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComic.scss';\n\nexport const SingleComic = () => {\n    const { comicId } = useParams();\n    const [comic, setComic] = useState(null);\n\n    const { loading, error, getOneComics, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateComic()\n    }, [comicId])\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const updateComic = () => {\n        clearError();\n        getOneComics(comicId)\n            .then(onComicLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !comic) ? <View comic = {comic} /> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n};\n\nconst View = ({comic}) => {\n    const { title, description, pageCount, thumbnail, language, price } = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all comics</Link>\n        </div>\n    );\n};","import { SingleComic } from \"../components/singleComic/SingleComic\";\r\n\r\nexport const SingleComicPage = () => (\r\n  <>\r\n    <SingleComic />\r\n  </>\r\n);","import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                            style={({ isActive }) => ({'color': isActive ? '#9f0013' : 'inherit'})}\n                            to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                            style={({ isActive }) => ({'color': isActive ? '#9f0013' : 'inherit'})}\n                            to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport { MainPage, ComicsPage, Page404, SingleComicPage } from '../../pages';\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n    \n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage />} />\n                        <Route path=\"/comics/\" element={<ComicsPage />} />\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage />} />\n                        <Route path=\"*\" element={<Page404 />} />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    ) \n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM\r\n  .createRoot(document.getElementById('root'))\r\n  .render(\r\n      <App />\r\n  );\r\n\r\n"],"sourceRoot":""}