{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","getResource","url","a","fetch","response","ok","Error","status","json","getAllCharacters","offset","result","data","results","map","_transformCharacter","getOneCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","length","slice","Spinner","xmlns","width","height","version","viewBox","style","margin","background","display","stopColor","fill","fillRule","d","attributeName","dur","from","repeatCount","to","type","ErrorMessage","objectFit","src","errorImg","alt","View","includes","RandomChar","useState","setChar","loading","setLoading","error","setError","marvelService","useEffect","updateChar","Math","floor","random","then","newChar","catch","err","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemsLoading","setItemsLoading","setOffset","charEnded","setCharEnded","onRequest","onCharListLoading","onCharListLoaded","onError","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","visibleList","index","ref","el","onCharSelected","onKeyPress","evt","key","tabIndex","renderItems","disabled","Skeleton","color","i","CharInfo","charId","onCharLoaded","skeleton","ErrorBoundary","state","this","children","Component","App","selectedChar","setSelectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7dc6573.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=382124e5ebc2fff76b70b64ce0e6f545';\r\n\r\n  getResource = async (url) => {\r\n    let response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  getAllCharacters = async (offset) => {\r\n    const result = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n    return result.data.results.map(this._transformCharacter);\r\n  }\r\n\r\n  getOneCharacter = async (id) => {\r\n    const result = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n    return this._transformCharacter(result.data.results[0]);\r\n  }\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? char.description : 'Description not found',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items.length > 0 ? char.comics.items.slice(0, 10) : 'There are no comics with this character'\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"200\"\r\n      height=\"200\"\r\n      version=\"1\"\r\n      viewBox=\"0 0 150 150\"\r\n      style={{margin: '0 auto', background: 'none', display: 'block'}}\r\n    >\r\n      <g>\r\n        <linearGradient id=\"a\">\r\n          <stop offset=\"0%\"></stop>\r\n          <stop offset=\"100%\" stopColor=\"#0090fe\"></stop>\r\n        </linearGradient>\r\n        <linearGradient id=\"b\">\r\n          <stop offset=\"0%\"></stop>\r\n          <stop offset=\"100%\" stopColor=\"#90e6fe\"></stop>\r\n        </linearGradient>\r\n        <path\r\n          fill=\"url(#a)\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M64 .98A63.02 63.02 0 11.98 64 63.02 63.02 0 0164 .98zm0 15.76A47.26 47.26 0 1116.74 64 47.26 47.26 0 0164 16.74z\"\r\n        ></path>\r\n        <path\r\n          fill=\"url(#b)\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M64.12 125.54A61.54 61.54 0 11125.66 64a61.54 61.54 0 01-61.54 61.54zm0-121.1A59.57 59.57 0 10123.7 64 59.57 59.57 0 0064.1 4.43zM64 115.56a51.7 51.7 0 1151.7-51.7 51.7 51.7 0 01-51.7 51.7zM64 14.4a49.48 49.48 0 1049.48 49.48A49.48 49.48 0 0064 14.4z\"\r\n        ></path>\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"1800ms\"\r\n          from=\"0 64 64\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"360 64 64\"\r\n          type=\"rotate\"\r\n        ></animateTransform>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={errorImg} alt=\"Возникла ошибка\" />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [])\n\n    const onCharLoaded = (newChar) => {\n        setChar(char => newChar);\n        setLoading(false);\n    }\n\n    const onCharLoading = () => {\n        setLoading(true);\n    }\n    \n    const onError = () => {\n        setLoading(false);\n        setError(true);\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        onCharLoading();\n        marvelService\n            .getOneCharacter(id)\n            .then(data => onCharLoaded(data)) \n            .catch(err => onError())\n    }\n\n    const onTryAnotherClick = () => {\n        setError(false);\n        updateChar();\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char = {char} /> : null;\n\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={onTryAnotherClick}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    const objectFit = thumbnail.includes('not_available') ? \"contain\" : \"cover\";\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{objectFit: objectFit}} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [newItemsLoading, setItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(Math.floor(Math.random() * (600 - 10) + 10));\n    const [charEnded, setCharEnded] = useState(false);\n\n    const marvelService = new MarvelService();\n\n    useEffect(() => {\n        onRequest();\n    }, [])\n\n    const onRequest = (offset) => {\n        onCharListLoading();\n        marvelService\n            .getAllCharacters(offset)\n            .then(data => onCharListLoaded(data))\n            .catch(onError)\n    }\n\n    const onCharListLoading = () => {\n        setItemsLoading(true);\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setLoading(loading => false);\n        setItemsLoading(newItemsLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const onError = () => {\n        setLoading(false);\n        setError(true);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    const renderItems = (arr) => {\n        const visibleList = arr.map((char, index) => {\n            return (\n                <li\n                    ref={el => itemRefs.current[index] = el}\n                    className=\"char__item\"\n                    key={char.id}\n                    onClick={() => {\n                        props.onCharSelected(char.id);\n                        focusOnItem(index);\n                    }}\n                    onKeyPress={(evt) => {\n                        if (evt.key === ' ' || evt.key === \"Enter\") {\n                            props.onCharSelected(char.id);\n                            focusOnItem(index);\n                        }\n                    }}\n                    tabIndex='0'>\n                    <img src={char.thumbnail} alt={char.name}/>\n                    <div className=\"char__name\">{char.name}</div>\n                </li>\n            );\n        });\n\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {visibleList}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemsLoading}\n                style={{display: charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    // componentDidUpdate срабатывает, когда у нас меняется props, когда меняется state или когда мы принудительно заставляем компонент перерендерится с помощью спец. функции\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n        setLoading(false);\n    }\n\n    const onCharLoading = () => {\n        setLoading(true);\n    }\n    \n    const onError = () => {\n        setLoading(false);\n        setError(true);\n    }\n\n    const updateChar = () => {\n        const {charId} = props; \n\n        if (!charId) {\n            return;\n        }\n\n        onCharLoading();\n\n        marvelService\n            .getOneCharacter(charId)\n            .then(onCharLoaded)\n            .catch(onError)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char = {char} /> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    const objectFit = thumbnail.includes('not_available') ? \"contain\" : \"cover\";\n\n    const getComicsListElement = () => {\n        if (typeof(comics) === 'string') {\n            return (\n                <li key={0} className=\"char__comics-item\" style={{color: 'red'}} >\n                    {comics}\n                </li>\n            )\n        } else {\n            const comicsList = comics.map((item, i) => {\n                return (\n                    <li key={i} className=\"char__comics-item\" >\n                        {item.name}\n                    </li>\n                )\n            })\n            return comicsList;            \n        }\n    };\n    \n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: objectFit}} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {getComicsListElement()}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n  \r\n  static getDerivedStateFromError(err) {\r\n    return { error: true };\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => {\n    const [selectedChar, setSelectedChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setSelectedChar(id);\n    }\n\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onCharSelected={onCharSelected}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    ) \n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}