{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","getResource","url","a","fetch","response","ok","Error","status","json","getAllCharacters","offset","result","data","results","map","_transformCharacter","getOneCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","length","slice","Spinner","xmlns","width","height","version","viewBox","style","margin","background","display","stopColor","fill","fillRule","d","attributeName","dur","from","repeatCount","to","type","ErrorMessage","objectFit","src","errorImg","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","err","onTryAnotherClick","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","includes","CharList","charList","newItemsLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","visibleList","index","props","onCharSelected","onKeyPress","evt","key","tabIndex","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","color","i","ErrorBoundary","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82cface2.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=382124e5ebc2fff76b70b64ce0e6f545';\r\n\r\n  getResource = async (url) => {\r\n    let response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  getAllCharacters = async (offset) => {\r\n    const result = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n    return result.data.results.map(this._transformCharacter);\r\n  }\r\n\r\n  getOneCharacter = async (id) => {\r\n    const result = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n    return this._transformCharacter(result.data.results[0]);\r\n  }\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? char.description : 'Description not found',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items.length > 0 ? char.comics.items.slice(0, 10) : 'There are no comics with this character'\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"200\"\r\n      height=\"200\"\r\n      version=\"1\"\r\n      viewBox=\"0 0 150 150\"\r\n      style={{margin: '0 auto', background: 'none', display: 'block'}}\r\n    >\r\n      <g>\r\n        <linearGradient id=\"a\">\r\n          <stop offset=\"0%\"></stop>\r\n          <stop offset=\"100%\" stopColor=\"#0090fe\"></stop>\r\n        </linearGradient>\r\n        <linearGradient id=\"b\">\r\n          <stop offset=\"0%\"></stop>\r\n          <stop offset=\"100%\" stopColor=\"#90e6fe\"></stop>\r\n        </linearGradient>\r\n        <path\r\n          fill=\"url(#a)\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M64 .98A63.02 63.02 0 11.98 64 63.02 63.02 0 0164 .98zm0 15.76A47.26 47.26 0 1116.74 64 47.26 47.26 0 0164 16.74z\"\r\n        ></path>\r\n        <path\r\n          fill=\"url(#b)\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M64.12 125.54A61.54 61.54 0 11125.66 64a61.54 61.54 0 01-61.54 61.54zm0-121.1A59.57 59.57 0 10123.7 64 59.57 59.57 0 0064.1 4.43zM64 115.56a51.7 51.7 0 1151.7-51.7 51.7 51.7 0 01-51.7 51.7zM64 14.4a49.48 49.48 0 1049.48 49.48A49.48 49.48 0 0064 14.4z\"\r\n        ></path>\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"1800ms\"\r\n          from=\"0 64 64\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"360 64 64\"\r\n          type=\"rotate\"\r\n        ></animateTransform>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={errorImg} alt=\"Возникла ошибка\" />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char: char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    \n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getOneCharacter(id)\n            .then(data => this.onCharLoaded(data)) \n            .catch(err => this.onError())\n    }\n\n    onTryAnotherClick = () => {\n        this.setState({\n            error: false\n        })\n\n        this.updateChar()\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char = {char} /> : null;\n\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.onTryAnotherClick}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    const objectFit = thumbnail.includes('not_available') ? \"contain\" : \"cover\";\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{objectFit: objectFit}} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemsLoading: false,\n        offset: Math.floor(Math.random() * (600 - 10) + 10),\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest(this.state.offset);\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService\n        .getAllCharacters(offset)\n        .then(data => this.onCharListLoaded(data))\n        .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true\n        });\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({charList, offset, charEnded}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemsLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const visibleList = this.state.charList.map((char, index) => {\n            return (\n                <li\n                    ref={this.setRef}\n                    className=\"char__item\"\n                    key={char.id}\n                    onClick={() => {\n                        this.props.onCharSelected(char.id);\n                        this.focusOnItem(index);\n                    }}\n                    onKeyPress={(evt) => {\n                        if (evt.key === ' ' || evt.key === \"Enter\") {\n                            this.props.onCharSelected(char.id);\n                            this.focusOnItem(index);\n                        }\n                    }}\n                    tabIndex='0'>\n                    <img src={char.thumbnail} alt={char.name}/>\n                    <div className=\"char__name\">{char.name}</div>\n                </li>\n            );\n        });\n\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {visibleList}\n            </ul>\n        )\n    }\n\n    render() {\n        const {charList, loading, error, newItemsLoading, offset, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemsLoading}\n                    style={{display: charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    // componentDidUpdate срабатывает, когда у нас меняется props (что здесь и происходит), когда меняется state или когда мы принудительно заставляем компонент перерендерится с помощью спец. функции\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }        \n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char: char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    \n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getOneCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        \n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char = {char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    const objectFit = thumbnail.includes('not_available') ? \"contain\" : \"cover\";\n\n    const getComicsListElement = () => {\n        if (typeof(comics) === 'string') {\n            return (\n                <li key={0} className=\"char__comics-item\" style={{color: 'red'}} >\n                    {comics}\n                </li>\n            )\n        } else {\n            const comicsList = comics.map((item, i) => {\n                return (\n                    <li key={i} className=\"char__comics-item\" >\n                        {item.name}\n                    </li>\n                )\n            })\n            return comicsList;            \n        }\n    };\n    \n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: objectFit}} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {getComicsListElement()}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n  \r\n  static getDerivedStateFromError(err) {\r\n    return { error: true };\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}